{
  "components": {
    "schemas": {
      "AddressRequest": {
        "properties": {
          "address": {
            "example": "Jakarta, Indonesia",
            "type": "string"
          }
        },
        "required": [
          "address"
        ],
        "type": "object"
      },
      "AddressResponse": {
        "properties": {
          "address": {
            "example": "Jakarta, Indonesia",
            "type": "string"
          },
          "city": {
            "example": "Jakarta",
            "type": "string"
          },
          "country": {
            "example": "Indonesia",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AuthResponse": {
        "properties": {
          "expiresIn": {
            "description": "Token expiration time in seconds",
            "example": 3600,
            "type": "integer"
          },
          "token": {
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/UserResponse"
          }
        },
        "type": "object"
      },
      "CoordinatesRequest": {
        "properties": {
          "latitude": {
            "example": -6.2088,
            "format": "double",
            "type": "number"
          },
          "longitude": {
            "example": 106.8456,
            "format": "double",
            "type": "number"
          }
        },
        "required": [
          "latitude",
          "longitude"
        ],
        "type": "object"
      },
      "CoordinatesResponse": {
        "properties": {
          "formattedAddress": {
            "example": "Jakarta, Indonesia",
            "type": "string"
          },
          "latitude": {
            "example": -6.2088,
            "format": "double",
            "type": "number"
          },
          "longitude": {
            "example": 106.8456,
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "ErrorResponse": {
        "properties": {
          "error": {
            "properties": {
              "code": {
                "example": "NF_01",
                "type": "string"
              },
              "details": {
                "example": "User not found.",
                "type": "string"
              },
              "message": {
                "example": "The requested resource was not found.",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "FoodItem": {
        "properties": {
          "description": {
            "example": "Tender chicken in a rich, creamy tomato sauce",
            "type": "string"
          },
          "id": {
            "example": "item123",
            "type": "string"
          },
          "imageUrl": {
            "example": "https://api.gourmetguide.ai/images/butter-chicken.jpg",
            "format": "uri",
            "type": "string"
          },
          "name": {
            "example": "Butter Chicken",
            "type": "string"
          },
          "price": {
            "example": 85000,
            "format": "float",
            "type": "number"
          },
          "tags": {
            "example": [
              "Spicy",
              "Popular",
              "Meat"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RecommendationRequest": {
        "properties": {
          "coordinates": {
            "properties": {
              "latitude": {
                "example": -6.2088,
                "format": "double",
                "type": "number"
              },
              "longitude": {
                "example": 106.8456,
                "format": "double",
                "type": "number"
              }
            },
            "type": "object"
          },
          "limit": {
            "description": "Maximum number of recommendations to return",
            "example": 5,
            "type": "integer"
          },
          "location": {
            "example": "Jakarta, Indonesia",
            "type": "string"
          },
          "preference": {
            "example": "I want something spicy and vegetarian",
            "type": "string"
          },
          "radius": {
            "description": "Search radius in kilometers",
            "example": 5.0,
            "format": "double",
            "type": "number"
          },
          "userId": {
            "description": "Optional user ID for personalized recommendations",
            "example": "user123",
            "type": "string"
          }
        },
        "required": [
          "location",
          "preference"
        ],
        "type": "object"
      },
      "RecommendationsResponse": {
        "properties": {
          "matchScore": {
            "description": "How well the recommendations match the user's preferences",
            "example": 0.92,
            "format": "float",
            "type": "number"
          },
          "restaurants": {
            "items": {
              "$ref": "#/components/schemas/Restaurant"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Restaurant": {
        "properties": {
          "address": {
            "example": "123 Spice Lane, Jakarta",
            "type": "string"
          },
          "aiDescription": {
            "description": "AI-generated description explaining why this restaurant is a good choice based on user preferences",
            "example": "Spice Garden stands out for its authentic Indian flavors and generous vegetarian options. Their perfectly balanced spice levels cater to both spice enthusiasts and those who prefer milder tastes. The restaurant's warm ambiance and attentive service make it ideal for both casual dining and special occasions.",
            "type": "string"
          },
          "coordinates": {
            "properties": {
              "latitude": {
                "example": -6.2088,
                "format": "double",
                "type": "number"
              },
              "longitude": {
                "example": 106.8456,
                "format": "double",
                "type": "number"
              }
            },
            "type": "object"
          },
          "cuisineTypes": {
            "example": [
              "Indian",
              "Spicy",
              "Vegetarian"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "distance": {
            "description": "Distance in kilometers from the user's location",
            "example": 1.2,
            "format": "float",
            "type": "number"
          },
          "hours": {
            "properties": {
              "friday": {
                "example": "10:00 AM - 11:00 PM",
                "type": "string"
              },
              "monday": {
                "example": "10:00 AM - 10:00 PM",
                "type": "string"
              },
              "saturday": {
                "example": "10:00 AM - 11:00 PM",
                "type": "string"
              },
              "sunday": {
                "example": "11:00 AM - 9:00 PM",
                "type": "string"
              },
              "thursday": {
                "example": "10:00 AM - 10:00 PM",
                "type": "string"
              },
              "tuesday": {
                "example": "10:00 AM - 10:00 PM",
                "type": "string"
              },
              "wednesday": {
                "example": "10:00 AM - 10:00 PM",
                "type": "string"
              }
            },
            "type": "object"
          },
          "id": {
            "example": "rest123",
            "type": "string"
          },
          "name": {
            "example": "Spice Garden",
            "type": "string"
          },
          "openNow": {
            "example": true,
            "type": "boolean"
          },
          "popularItems": {
            "items": {
              "$ref": "#/components/schemas/FoodItem"
            },
            "type": "array"
          },
          "priceRange": {
            "example": "$$",
            "type": "string"
          },
          "rating": {
            "example": 4.7,
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "SuggestionsResponse": {
        "properties": {
          "suggestions": {
            "example": [
              "I feel like eating something spicy and cheap",
              "Recommend a healthy lunch option",
              "What's a good vegetarian restaurant nearby?",
              "I want something quick and filling",
              "Show me the best-rated restaurants"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "UserLoginRequest": {
        "properties": {
          "email": {
            "example": "user@example.com",
            "format": "email",
            "type": "string"
          },
          "password": {
            "example": "securePassword123",
            "format": "password",
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ],
        "type": "object"
      },
      "UserPreferencesRequest": {
        "properties": {
          "dietaryRestrictions": {
            "example": [
              "Vegetarian",
              "Gluten-Free"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "favoritesCuisines": {
            "example": [
              "Italian",
              "Japanese",
              "Indian"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "priceRangePreference": {
            "enum": [
              "$",
              "$$",
              "$$$",
              "$$$$"
            ],
            "example": "$$",
            "type": "string"
          },
          "spiceLevelPreference": {
            "example": 3,
            "maximum": 5,
            "minimum": 1,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "UserPreferencesResponse": {
        "properties": {
          "dietaryRestrictions": {
            "example": [
              "Vegetarian",
              "Gluten-Free"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "favoritesCuisines": {
            "example": [
              "Italian",
              "Japanese",
              "Indian"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "priceRangePreference": {
            "enum": [
              "$",
              "$$",
              "$$$",
              "$$$$"
            ],
            "example": "$$",
            "type": "string"
          },
          "spiceLevelPreference": {
            "example": 3,
            "maximum": 5,
            "minimum": 1,
            "type": "integer"
          },
          "updatedAt": {
            "example": "2025-03-27T13:51:25Z",
            "format": "date-time",
            "type": "string"
          },
          "userId": {
            "example": "user123",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserRegistrationRequest": {
        "properties": {
          "email": {
            "example": "user@example.com",
            "format": "email",
            "type": "string"
          },
          "name": {
            "example": "John Doe",
            "type": "string"
          },
          "password": {
            "example": "securePassword123",
            "format": "password",
            "type": "string"
          }
        },
        "required": [
          "email",
          "password",
          "name"
        ],
        "type": "object"
      },
      "UserResponse": {
        "properties": {
          "createdAt": {
            "example": "2025-03-27T13:51:25Z",
            "format": "date-time",
            "type": "string"
          },
          "email": {
            "example": "user@example.com",
            "format": "email",
            "type": "string"
          },
          "id": {
            "example": "user123",
            "type": "string"
          },
          "name": {
            "example": "John Doe",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "bearerFormat": "JWT",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "contact": {
      "email": "support@gourmetguide.ai",
      "name": "API Support"
    },
    "description": "API for the Gourmet Guide AI food recommendation service",
    "title": "Gourmet Guide AI API",
    "version": "1.0.0"
  },
  "openapi": "3.0.3",
  "paths": {
    "/location/geocode": {
      "post": {
        "description": "Convert a text address to geographic coordinates",
        "operationId": "geocodeAddress",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoordinatesResponse"
                }
              }
            },
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Invalid address supplied"
          }
        },
        "summary": "Convert address to coordinates",
        "tags": [
          "location"
        ]
      }
    },
    "/location/reverse-geocode": {
      "post": {
        "description": "Convert geographic coordinates to a text address",
        "operationId": "reverseGeocodeCoordinates",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoordinatesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressResponse"
                }
              }
            },
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Invalid coordinates supplied"
          }
        },
        "summary": "Convert coordinates to address",
        "tags": [
          "location"
        ]
      }
    },
    "/preferences/suggestions": {
      "get": {
        "description": "Get a list of suggested food preferences for the user",
        "operationId": "getFoodPreferenceSuggestions",
        "parameters": [
          {
            "description": "Number of suggestions to return",
            "in": "query",
            "name": "count",
            "required": false,
            "schema": {
              "default": 5,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuggestionsResponse"
                }
              }
            },
            "description": "Successful operation"
          }
        },
        "summary": "Get food preference suggestions",
        "tags": [
          "preferences"
        ]
      }
    },
    "/restaurants/recommendations": {
      "post": {
        "description": "Get personalized restaurant recommendations based on location and preferences",
        "operationId": "getRestaurantRecommendations",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecommendationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendationsResponse"
                }
              }
            },
            "description": "Successful operation"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Invalid request parameters"
          }
        },
        "summary": "Get restaurant recommendations",
        "tags": [
          "restaurants"
        ]
      }
    },
    "/users/login": {
      "post": {
        "description": "Authenticate a user and return a token",
        "operationId": "loginUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            },
            "description": "Login successful"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Invalid credentials"
          }
        },
        "summary": "Log in a user",
        "tags": [
          "users"
        ]
      }
    },
    "/users/preferences": {
      "get": {
        "description": "Get the saved preferences for the authenticated user",
        "operationId": "getUserPreferences",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPreferencesResponse"
                }
              }
            },
            "description": "Successful operation"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get user preferences",
        "tags": [
          "users"
        ]
      },
      "put": {
        "description": "Update the preferences for the authenticated user",
        "operationId": "updateUserPreferences",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPreferencesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPreferencesResponse"
                }
              }
            },
            "description": "Preferences updated successfully"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update user preferences",
        "tags": [
          "users"
        ]
      }
    },
    "/users/register": {
      "post": {
        "description": "Create a new user account",
        "operationId": "registerUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistrationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            },
            "description": "User created successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Invalid input"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "User already exists"
          }
        },
        "summary": "Register a new user",
        "tags": [
          "users"
        ]
      }
    }
  },
  "servers": [
    {
      "description": "Production server",
      "url": "https://api.gourmetguide.ai/v1"
    },
    {
      "description": "Staging server",
      "url": "https://staging-api.gourmetguide.ai/v1"
    }
  ],
  "tags": [
    {
      "description": "Location-related endpoints",
      "name": "location"
    },
    {
      "description": "User food preference endpoints",
      "name": "preferences"
    },
    {
      "description": "Restaurant recommendation endpoints",
      "name": "restaurants"
    },
    {
      "description": "User management endpoints",
      "name": "users"
    }
  ]
}
