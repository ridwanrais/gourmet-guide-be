version: "3.8"

services:
  timescaledb:
    image: timescale/timescaledb:latest-pg14
    container_name: gourmet_guide_timescaledb
    environment:
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_DB=${DB_NAME:-gourmet_guide}
    command:
      [
        "postgres",
        "-c",
        "shared_preload_libraries=timescaledb",
        "-c",
        "timescaledb.telemetry_level=off",
      ]
    ports:
      - "5432:5432"
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-gourmet_guide} && \
           echo 'SELECT 1' | psql -U ${DB_USER:-postgres} -d ${DB_NAME:-gourmet_guide} -t",
        ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s

  app:
    build: .
    container_name: gourmet_guide_app
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-postgres}@timescaledb:5432/${DB_NAME:-gourmet_guide}
      - DB_HOST=timescaledb
      - DB_PORT=5432
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_NAME=${DB_NAME:-gourmet_guide}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - OPENROUTER_BASE_URL=${OPENROUTER_BASE_URL:-https://openrouter.ai/api/v1}
      - OPENROUTER_MODEL=${OPENROUTER_MODEL:-deepseek/deepseek-chat-v3-0324:free}
      - API_V1_PREFIX=/v1
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - LOG_FORMAT=json
      - GOFOOD_COOKIE=${GOFOOD_COOKIE}
    depends_on:
      timescaledb:
        condition: service_healthy
    restart: on-failure
    volumes:
      - .:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/v1/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  timescaledb_data:
    driver: local
